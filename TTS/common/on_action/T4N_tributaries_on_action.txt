on_game_start_after_lobby= {
    on_actions = {
        delay = { months = 1 }
        T4N_on_monthly_tribute
    }
}

T4N_on_monthly_tribute = {
    effect = {
        every_in_global_list = {
            variable = T4N_suzerains

            # Determine if still a suzerain
            trigger_event = { id = tributaries.4 }
            # Income
            trigger_event = { id = tributaries.5 }
        }
    }

    on_actions = {
        delay = { months = 1 }
        T4N_on_monthly_tribute
    }
}


on_war_won_attacker = {
	# The war notifications are handled in `effect` instead of `events` due to order of operations.
	# `effect` fires on THIS tick, `events` fires on the NEXT tick, and the war gets destroyed between this tick and the next.
	on_actions = {
		delay = { days = 1 } #to make sure that war gets destroyed
		T4N_tributaries_on_war_won
	}
}

T4N_tributaries_on_war_won = {
	effect = {
        if = {
            limit = {
                scope:defender = {
                    exists = var:suzerain
                    OR = {
                        is_independent_ruler = no
                        is_landed = no
                    }
                }
            }
            scope:defender = {
                save_scope_as = former_tributary
                var:suzerain = {
                    trigger_event = { id = tributaries.3 }
                }
            }
        }
	}
}

# called when a war is started.
# same scopes are available in these events as in the CBs' on_declaration, this just fires for all CBs instead of a specific CB.

on_war_started = {
    on_actions = {
        T4N_tributaries_on_war_started
    }
}

T4N_tributaries_on_war_started = {
    effect = {
        if = { #permanent tributary calls his suzerain to defensive war
            limit = {
                scope:defender = {
                    exists = var:my_suzerain
                    any_war_ally = {
                        NOT = {
                            this = var:my_suzerain
                        }
                    }
                    var:my_suzerain = {
                        is_target_in_variable_list = { name = permanent_tributaries target = prev }
                    }
                }
            }
            scope:defender = {
                save_scope_as = call_to_arms_tribute
                var:my_suzerain = {
                    trigger_event = { id = tributaries.6 }
                }
            }
        }
    }
}

# A title is lost by a character
# root = the old holder
# scope:title = the title that changes hands
# scope:new_holder = new holder.
on_title_lost = {
    on_actions = {
        T4N_tributaries_on_title_lost
    }
}

T4N_tributaries_on_title_lost = {
    effect = {
        if = { #Clear Tributaries lists if Suzrain is no longer ruler, independent or holds land
            limit = {
                root = {
                    exists = var:suzerain
                    OR = {
                        is_landed = no
                        is_independent_ruler = no
                        liege = scope:new_holder
                    }
                }
                scope:new_holder = {
                    OR = {
                        has_claim_on = scope:title
                        dynasty = root
                    }
                }
            }
            every_independent_ruler = {
                limit = {
                    exists = var:my_suzerain
                    var:my_suzerain = {
                        this = root
                    }
                    prev = {
                        is_target_in_variable_list = { name = permanent_tributaries target = prev }
                    }
                }
                scope:new_holder = {
                    add_to_variable_list = { name = permanent_tributaries target = prev }
                    set_variable = { name = suzerain value = this }
                    prev = {
                        set_variable = { name = my_suzerain value = prev }
                    }
                }
                root = {
                    clear_variable_list = permanent_tributaries
                    clear_variable_list = non_permanent_tributaries
                    remove_variable = suzerain
                }
            }
        }
        else_if = {
            limit = {
                root = {
                    exists = var:suzerain
                    is_landed = no
                    NOT = { liege = scope:new_holder }
                }
                scope:new_holder = {
                    NOR = {
                        has_claim_on = scope:title
                        dynasty = root
                    }
                }
            }
            every_independent_ruler = {
                limit = {
                    exists = var:my_suzerain
                    var:my_suzerain = {
                        this = root
                    }
                }
                remove_variable = my_suzerain
            }
            root = {
                clear_variable_list = permanent_tributaries
                clear_variable_list = non_permanent_tributaries
                remove_variable = suzerain
            }            
        }       
        if = {
            limit = {
                root = {
                    exists = var:my_suzerain
                    OR = {
                        is_independent_ruler = no
                        is_landed = no
                    }
                }
            }
            root = {
                save_scope_as = former_tributary
                var:my_suzerain = {
                    trigger_event = { id = tributaries.3 }
                }
            }
        } 
        else_if = {
            limit = {
                root = {
                    exists = var:my_suzerain
                    var:my_suzerain = {
                        is_target_in_variable_list = { name = permanent_tributaries target = prev }
                    }
                    scope:new_holder = {
                        OR = {
                            dynasty = root
                            has_claim_on = scope:title
                        }
                    }
                }
            }
            root = {
                var:my_suzerain = {
                    scope:new_holder = {
                        add_to_variable_list = { name = permanent_tributaries target = prev }
                        set_variable = { name = my_suzerain value = prev}
                    }
                }
                save_scope_as = former_tributary
                var:my_suzerain = {
                    trigger_event = { id = tributaries.3 }
                }
            }
        }   
    }
}

# character just about to die in root scope
# if a killer is know, it's set as scope:killer
#Triggered by code
on_death = {
    on_actions = {
        T4N_tributaries_on_death
    }
}

T4N_tributaries_on_death = {
    effect = {
        if = {
            limit = {
                exists = var:suzerain
            }
            trigger_event = { id = tributaries.1 }
        }
        if = {
            limit = {
                root = {
                    exists = var:my_suzerain
                }
            }
            trigger_event = { id = tributaries.2 }
        }
    }
}